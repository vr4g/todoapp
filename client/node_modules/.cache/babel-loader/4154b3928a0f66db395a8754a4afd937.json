{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vr4gg\\\\OneDrive\\\\Desktop\\\\todoapp-react\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport AddTodo from \"./components/AddTodo\";\nimport Header from \"./components/Header\";\nimport TodoList from \"./components/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{}]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [triggerRefresh, setTriggerRefresh] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 3000);\n  }, []);\n\n  async function fetchData() {\n    const response = await fetch(\"/task\");\n\n    if (!response.ok) {\n      console.log(\"Cannot fetch\");\n    }\n\n    const data = await response.json();\n    setTasks(data);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [triggerRefresh]);\n\n  const addTask = async task => {\n    const recordBodyParameters = {\n      title: task.title,\n      category_id: task.category_id\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(recordBodyParameters)\n    };\n    setTriggerRefresh(current => !current);\n    const response = await fetch(\"/task\", options);\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  };\n\n  const deleteTask = async id => {\n    if (!window.confirm(\"Da li ste sigurni?\")) {\n      return;\n    }\n\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/form-data\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    };\n    const response = await fetch(\"/task/:id\", options);\n    const jsonResponse = await response.json();\n    setTriggerRefresh(current => !current);\n    return jsonResponse;\n  };\n\n  const editTask = async (id, newText) => {\n    const recordBodyParameters = {\n      id: id,\n      title: newText\n    };\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(recordBodyParameters)\n    };\n    const response = await fetch(\"/task/:id\", options);\n    return response.json();\n  };\n\n  const filterTasks = async category_id => {\n    category_id === 0 && fetchData();\n    const response = await fetch(`http://localhost:5000/task/filter/:category_id=${category_id}`);\n    /*    const response = await fetch(\n      `http://localhost:5000/task/filter?category_id=${category_id}`\n    ); */\n\n    if (!response.ok) {\n      console.log(\"Cannot fetch\");\n    }\n\n    const data = await response.json();\n    setTasks(data);\n  };\n\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"splash-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-text\",\n      children: \"To-Do APP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"leading-text\",\n      children: \"made by Damjan Petri\\u010Devi\\u0107\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"My custom to-do list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AddTodo, {\n          onAdd: addTask,\n          fetchAll: () => {\n            fetchData();\n          },\n          filterTasks: filterTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onEdit: editTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5D7VHNEBhSa62AlImws0X5jpBfY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AddTodo","Header","TodoList","useEffect","useState","App","tasks","setTasks","isLoading","setIsLoading","triggerRefresh","setTriggerRefresh","setTimeout","fetchData","response","fetch","ok","console","log","data","json","addTask","task","recordBodyParameters","title","category_id","options","method","headers","body","JSON","stringify","current","jsonResponse","deleteTask","id","window","confirm","Accept","editTask","newText","filterTasks"],"sources":["C:/Users/vr4gg/OneDrive/Desktop/todoapp-react/client/src/App.js"],"sourcesContent":["import AddTodo from \"./components/AddTodo\";\nimport Header from \"./components/Header\";\nimport TodoList from \"./components/TodoList\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([{}]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [triggerRefresh, setTriggerRefresh] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 3000);\n  }, []);\n\n  async function fetchData() {\n    const response = await fetch(\"/task\");\n    if (!response.ok) {\n      console.log(\"Cannot fetch\");\n    }\n\n    const data = await response.json();\n    setTasks(data);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [triggerRefresh]);\n\n  const addTask = async (task) => {\n    const recordBodyParameters = {\n      title: task.title,\n      category_id: task.category_id,\n    };\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(recordBodyParameters),\n    };\n    setTriggerRefresh((current) => !current);\n\n    const response = await fetch(\"/task\", options);\n    const jsonResponse = await response.json();\n\n    return jsonResponse;\n  };\n\n  const deleteTask = async (id) => {\n    if (!window.confirm(\"Da li ste sigurni?\")) {\n      return;\n    }\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/form-data\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: id }),\n    };\n\n    const response = await fetch(\"/task/:id\", options);\n    const jsonResponse = await response.json();\n    setTriggerRefresh((current) => !current);\n    return jsonResponse;\n  };\n\n  const editTask = async (id, newText) => {\n    const recordBodyParameters = {\n      id: id,\n      title: newText,\n    };\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(recordBodyParameters),\n    };\n    const response = await fetch(\"/task/:id\", options);\n    return response.json();\n  };\n\n  const filterTasks = async (category_id) => {\n    category_id === 0 && fetchData();\n    const response = await fetch(\n      `http://localhost:5000/task/filter/:category_id=${category_id}`\n    );\n    /*    const response = await fetch(\n      `http://localhost:5000/task/filter?category_id=${category_id}`\n    ); */\n    if (!response.ok) {\n      console.log(\"Cannot fetch\");\n    }\n    const data = await response.json();\n    setTasks(data);\n  };\n\n  return isLoading ? (\n    <div className=\"splash-screen\">\n      <h1 className=\"main-text\">To-Do APP</h1>\n      <span className=\"leading-text\">made by Damjan Petričević</span>\n    </div>\n  ) : (\n    <div className=\"App\">\n      <Header title=\"My custom to-do list\" />\n      <div className=\"container\">\n        <div>\n          <AddTodo\n            onAdd={addTask}\n            fetchAll={() => {\n              fetchData();\n            }}\n            filterTasks={filterTasks}\n          />\n        </div>\n        <TodoList tasks={tasks} onDelete={deleteTask} onEdit={editTask} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}