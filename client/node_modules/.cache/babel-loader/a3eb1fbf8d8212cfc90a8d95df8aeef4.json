{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vr4gg\\\\OneDrive\\\\Desktop\\\\todoapp-react\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport AddTodo from \"./components/AddTodo\";\nimport Header from \"./components/Header\";\nimport TodoList from \"./components/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const endPoint = \"/task\";\n  const [tasks, setTasks] = useState([{}]);\n\n  const splashScreen = () => {\n    this.logoutTimer = setTimeout(() => {\n      return false;\n    }, 1000 * 2 * 1);\n    return true;\n  };\n\n  async function fetchData() {\n    const response = await fetch(endPoint);\n\n    if (!response.ok) {\n      console.log(\"Cannot fetch\");\n    }\n\n    const data = await response.json();\n    setTasks(data);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [tasks]);\n\n  const addTask = async task => {\n    const recordBodyParameters = {\n      title: task.title,\n      category_id: task.category_id\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(recordBodyParameters)\n    };\n    const response = await fetch(endPoint, options);\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  };\n\n  const deleteTask = async id => {\n    if (!window.confirm(\"Da li ste sigurni?\")) {\n      return;\n    }\n\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/form-data\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    };\n    const response = await fetch(endPoint, options);\n    const jsonResponse = await response.json();\n    console.log(JSON.stringify(jsonResponse));\n    return jsonResponse;\n  };\n\n  const editTask = async (id, newText) => {\n    const recordBodyParameters = {\n      id: id,\n      title: newText,\n      category_id: 1\n    };\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(recordBodyParameters)\n    };\n    const response = await fetch(endPoint, options);\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  };\n\n  return splashScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Splash screen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AddTodo, {\n          onAdd: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onEdit: editTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xjfqd92zY9eJbU5UHO/jkXAJndE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AddTodo","Header","TodoList","useEffect","useState","App","endPoint","tasks","setTasks","splashScreen","logoutTimer","setTimeout","fetchData","response","fetch","ok","console","log","data","json","addTask","task","recordBodyParameters","title","category_id","options","method","headers","body","JSON","stringify","jsonResponse","deleteTask","id","window","confirm","Accept","editTask","newText"],"sources":["C:/Users/vr4gg/OneDrive/Desktop/todoapp-react/client/src/App.js"],"sourcesContent":["import AddTodo from \"./components/AddTodo\";\nimport Header from \"./components/Header\";\nimport TodoList from \"./components/TodoList\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const endPoint = \"/task\";\n\n  const [tasks, setTasks] = useState([{}]);\n\n  const splashScreen = () => {\n    this.logoutTimer = setTimeout(() => {\n      return false;\n    }, 1000 * 2 * 1);\n    return true;\n  };\n\n  async function fetchData() {\n    const response = await fetch(endPoint);\n    if (!response.ok) {\n      console.log(\"Cannot fetch\");\n    }\n\n    const data = await response.json();\n    setTasks(data);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [tasks]);\n\n  const addTask = async (task) => {\n    const recordBodyParameters = {\n      title: task.title,\n      category_id: task.category_id,\n    };\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(recordBodyParameters),\n    };\n\n    const response = await fetch(endPoint, options);\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  };\n\n  const deleteTask = async (id) => {\n    if (!window.confirm(\"Da li ste sigurni?\")) {\n      return;\n    }\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/form-data\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: id }),\n    };\n\n    const response = await fetch(endPoint, options);\n    const jsonResponse = await response.json();\n    console.log(JSON.stringify(jsonResponse));\n    return jsonResponse;\n  };\n\n  const editTask = async (id, newText) => {\n    const recordBodyParameters = {\n      id: id,\n      title: newText,\n      category_id: 1,\n    };\n\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(recordBodyParameters),\n    };\n\n    const response = await fetch(endPoint, options);\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  };\n\n  return splashScreen ? (\n    <div>Splash screen</div>\n  ) : (\n    <div className=\"App\">\n      <Header title=\"To Do List\" />\n      <div className=\"container\">\n        <div>\n          <AddTodo onAdd={addTask} />\n        </div>\n        <TodoList tasks={tasks} onDelete={deleteTask} onEdit={editTask} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}